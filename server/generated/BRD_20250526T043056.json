{
  "title": "TS-0526 Shoppers Stop :: Darwinbox - this is to update the biometric data for them for payroll and performance purpose Integration BRD",
  "detailsTable": {
    "Client": "Shoppers Stop",
    "Vendor": "Darwinbox",
    "Version": "2.0",
    "Doc Owner": "@Integration Team",
    "Functional Lead": "@Technical Lead",
    "Status": "IN REVIEW [DRAFT / IN REVIEW / APPROVED / IN PRODUCTION]",
    "Last updated by": "@Integration Team",
    "Last date updated": "05-26-2025",
    "Client Approved By [Name, Designation]": "",
    "Client Approved Date": "",
    "Mode of Integration": "API - BASED [API-BASED / STANDARD / CUSTOM DEV]",
    "Modules": "Attendance",
    "Direction": "INBOUND [INBOUND / OUTBOUND / BI-DIRECTION]",
    "Frequency": "Monthly, Last Thursday, 6pm",
    "Data Load": "Incremental",
    "Client email for communication": "integration@client.com"
  },
  "sections": {
    "Purpose/Justification": {
      "type": "text",
      "content": "*   This document outlines the business requirements defined by Shoppers Stop and technical details associated with the Biometric integration using API approach defined by the Darwinbox Integrations team to have an updated integration in place between Darwinbox and Shoppers Stop."
    },
    "Integration Description and Overview": {
      "type": "text",
      "content": "**Integration Description and Overview**\n*   This is an API-based inbound integration between Shoppers Stop and Darwinbox.\n*   Shoppers Stop will consume Darwinbox APIs to push employee biometric data.\n*   The integration aims to update biometric data for payroll and performance purposes.\n*   The scope is limited to 10,000 employees, with a maximum of 100,000 attendance punches pushed daily.\n*   Data flow is inbound to Darwinbox, specifically for the Attendance module.\n**API-Based Approach**\n*   Shoppers Stop will make API calls to Darwinbox."
    },
    "Technical Design Specifications": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API - BASED INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Data Mapping Table": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API - BASED INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Assumptions": {
      "type": "text",
      "content": "**Assumptions**\n*   Shoppers Stop will provide accurate and complete employee biometric data.\n*   All employee IDs provided by Shoppers Stop will exist in Darwinbox.\n*   Shoppers Stop will adhere to Darwinbox API specifications and rate limits.\n*   Shoppers Stop will ensure data is transmitted securely.\n*   Darwinbox API uptime will be maintained as per the Darwinbox SLA.\n*   Shoppers Stop will handle any data transformation required before sending data to Darwinbox.\n*   Shoppers Stop will provide necessary authentication credentials for API access.\n*   Shoppers Stop will notify Darwinbox of any changes to their data structure or API usage.\n*   The employee strength will not exceed 10,000.\n*   The maximum number of attendance punches pushed in a day will not exceed 1,00,000."
    },
    "Dependencies": {
      "type": "text",
      "content": "- Darwinbox API access must be provisioned for Shoppers Stop.\n    - API endpoint details and documentation will be provided.\n    - Shoppers Stop's IP address(es) must be whitelisted.\n- Authentication credentials (API keys or tokens) must be generated and securely shared with Shoppers Stop.\n- The HCM module (Attendance) must be fully configured in Darwinbox.\n    - Attendance policies must be defined.\n    - Attendance shifts must be configured.\n    - Employee data must be present in Darwinbox."
    },
    "APIs Used": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API - BASED INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Test Cases": {
      "type": "text",
      "content": "**Test Cases: Attendance Data Integration (Shoppers Stop to Darwinbox)**\n\n*   **Objective:** Validate the successful and accurate transfer of attendance punches from Shoppers Stop to Darwinbox via API.\n\n*   **General Test Case Requirements:**\n\n    *   All test cases must be executed in a test environment mirroring the production environment.\n    *   Test data should include a representative sample of employee profiles and attendance patterns.\n    *   Each test case should document the expected result and the actual result.\n    *   Any discrepancies between expected and actual results must be documented as defects.\n\n*   **Test Case Categories:**\n\n    *   Successful Data Transfer\n    *   Error Handling\n    *   Data Validation\n    *   Performance and Scalability\n    *   Security\n\n*   **Test Cases - Successful Data Transfer:**\n\n    *   **TC_ATT_001: Single Attendance Punch Success**\n        *   Objective: Verify a single attendance punch is successfully transferred.\n        *   Steps:\n            1.  Generate a single attendance punch in Shoppers Stop for a valid employee.\n            2.  Trigger the API to send the punch to Darwinbox.\n        *   Expected Result: The attendance punch is recorded in Darwinbox with correct timestamp and employee ID.\n\n    *   **TC_ATT_002: Multiple Attendance Punches Success**\n        *   Objective: Verify multiple attendance punches for the same employee are successfully transferred.\n        *   Steps:\n            1.  Generate multiple attendance punches (e.g., clock-in, lunch-out, lunch-in, clock-out) in Shoppers Stop for a valid employee.\n            2.  Trigger the API to send the punches to Darwinbox.\n        *   Expected Result: All attendance punches are recorded in Darwinbox in the correct sequence and with correct timestamps.\n\n    *   **TC_ATT_003: Attendance Punches for Multiple Employees Success**\n        *   Objective: Verify attendance punches for multiple employees are successfully transferred.\n        *   Steps:\n            1.  Generate attendance punches for multiple employees in Shoppers Stop.\n            2.  Trigger the API to send the punches to Darwinbox.\n        *   Expected Result: All attendance punches are recorded in Darwinbox for the respective employees with correct timestamps.\n\n*   **Test Cases - Error Handling:**\n\n    *   **TC_ATT_004: Invalid Employee ID**\n        *   Objective: Verify error handling for invalid employee IDs.\n        *   Steps:\n            1.  Generate an attendance punch in Shoppers Stop with an invalid employee ID.\n            2.  Trigger the API to send the punch to Darwinbox.\n        *   Expected Result: Darwinbox rejects the punch and returns an error message indicating an invalid employee ID. Shoppers Stop receives the error message.\n\n    *   **TC_ATT_005: Missing Required Fields**\n        *   Objective: Verify error handling for missing required fields (e.g., timestamp).\n        *   Steps:\n            1.  Generate an attendance punch in Shoppers Stop with a missing required field.\n            2.  Trigger the API to send the punch to Darwinbox.\n        *   Expected Result: Darwinbox rejects the punch and returns an error message indicating the missing field. Shoppers Stop receives the error message.\n\n    *   **TC_ATT_006: Duplicate Attendance Punch**\n        *   Objective: Verify handling of duplicate attendance punches.\n        *   Steps:\n            1.  Send the same attendance punch twice to Darwinbox.\n        *   Expected Result: Darwinbox processes the first punch and rejects the subsequent duplicate punch, returning an appropriate error message.\n\n*   **Test Cases - Data Validation:**\n\n    *   **TC_ATT_007: Timestamp Validation**\n        *   Objective: Verify timestamp accuracy.\n        *   Steps:\n            1.  Generate an attendance punch with a specific timestamp in Shoppers Stop.\n            2.  Trigger the API to send the punch to Darwinbox.\n        *   Expected Result: The timestamp recorded in Darwinbox matches the timestamp in Shoppers Stop.\n\n    *   **TC_ATT_008: Data Type Validation**\n        *   Objective: Verify data types of transferred fields.\n        *   Steps:\n            1.  Generate attendance data with various data types (e.g., string, integer, date).\n            2.  Trigger the API to send the data to Darwinbox.\n        *   Expected Result: Darwinbox correctly interprets and stores the data according to the defined data types.\n\n*   **Test Cases - Performance and Scalability:**\n\n    *   **TC_ATT_009: High Volume Data Transfer**\n        *   Objective: Verify the system can handle a high volume of attendance punches.\n        *   Steps:\n            1.  Simulate sending 100,000 attendance punches within a 24-hour period.\n        *   Expected Result: Darwinbox processes all punches without significant performance degradation or data loss.\n\n    *   **TC_ATT_010: API Response Time**\n        *   Objective: Measure API response time under normal and peak load.\n        *   Steps:\n            1.  Measure the API response time for individual and batch data transfers.\n        *   Expected Result: API response time remains within acceptable limits (e.g., < 2 seconds for individual punches, < 5 seconds for batch transfers).\n\n*   **Test Cases - Security:**\n\n    *   **TC_ATT_011: Authentication and Authorization**\n        *   Objective: Verify proper authentication and authorization mechanisms.\n        *   Steps:\n            1.  Attempt to send attendance data to Darwinbox without proper authentication credentials.\n        *   Expected Result: Darwinbox rejects the request and returns an authentication error.\n\n    *   **TC_ATT_012: Data Encryption**\n        *   Objective: Verify data encryption during transit.\n        *   Steps:\n            1.  Monitor network traffic during data transfer.\n        *   Expected Result: All attendance data is encrypted during transit using HTTPS or other secure protocols."
    },
    "Data Flow Diagram": {
      "type": "graphviz",
      "code": "digraph inbound_api_integration {\n    rankdir=LR;\n    node [shape=box, style=rounded, fontname=\"Arial\", fontsize=10];\n\n    subgraph cluster_shoppersstop {\n        label = \"Shoppers Stop\";\n        style = filled;\n        color = \"#E6E6FA\";\n\n        shoppersstop_system [label=\"Shoppers Stop System\", shape=cylinder];\n        api_gateway [label=\"API Gateway\", shape=box];\n        data_validation [label=\"Data Validation\", shape=box];\n        custom_logic [label=\"Custom Logic\\n(Attendance Processing)\", shape=box];\n    }\n\n    subgraph cluster_darwinbox {\n        label = \"Darwinbox\";\n        style = filled;\n        color = \"#F0FFF0\";\n\n        darwinbox_api [label=\"Darwinbox API\\n(Push Attendance Punches)\", shape=cylinder];\n        darwinbox_db [label=\"Darwinbox Database\", shape=database];\n    }\n\n    // Edges\n    shoppersstop_system -> api_gateway [label=\"Attendance Punches (JSON)\", style=bold];\n    api_gateway -> data_validation [label=\"Request\"];\n    data_validation -> custom_logic [label=\"Validated Data\"];\n    custom_logic -> darwinbox_api [label=\"Transformed Data\"];\n    darwinbox_api -> darwinbox_db [label=\"Store Attendance Data\"];\n\n    // Styling\n    api_gateway [style=\"rounded,filled\", fillcolor=\"#ADD8E6\"];\n    data_validation [style=\"rounded,filled\", fillcolor=\"#90EE90\"];\n    custom_logic [style=\"rounded,filled\", fillcolor=\"#FFA07A\"];\n    darwinbox_api [style=\"rounded,filled\", fillcolor=\"#ADD8E6\"];\n\n    // Limits Annotation\n    note [shape=note, label=\"Employee Strength: 10,000\\nMax Attendance Punches/Day: 100,000\", pos=\"5,0!\", fixedsize=true, width=2, height=1];\n}\n",
      "format": "dot"
    }
  },
  "metadata": {
    "generatedAt": "2025-05-26T04:30:56.417Z",
    "totalSections": 9
  }
}