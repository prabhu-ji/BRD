{
  "title": "TS-0526 Shoppers Stop :: Darwinbox - this is to update the biometric data for them for payroll and performance purpose Integration BRD",
  "detailsTable": {
    "Client": "Shoppers Stop",
    "Vendor": "Darwinbox",
    "Version": "2.0",
    "Doc Owner": "@Integration Team",
    "Functional Lead": "@Technical Lead",
    "Status": "IN REVIEW [DRAFT / IN REVIEW / APPROVED / IN PRODUCTION]",
    "Last updated by": "@Integration Team",
    "Last date updated": "05-26-2025",
    "Client Approved By [Name, Designation]": "",
    "Client Approved Date": "",
    "Mode of Integration": "API - BASED [API-BASED / STANDARD / CUSTOM DEV]",
    "Modules": "Attendance",
    "Direction": "INBOUND [INBOUND / OUTBOUND / BI-DIRECTION]",
    "Frequency": "Monthly, Last Thursday, 6pm",
    "Data Load": "Incremental",
    "Client email for communication": "integration@client.com"
  },
  "sections": {
    "Purpose/Justification": {
      "type": "text",
      "content": "*   This document outlines the business requirements and technical details associated with the API-based inbound integration defined by Shoppers Stop and the Darwinbox Integrations team.\n\n*   The purpose is to facilitate the seamless transfer of employee biometric attendance data from Shoppers Stop to Darwinbox for accurate payroll processing and performance management."
    },
    "Integration Description and Overview": {
      "type": "text",
      "content": "**Integration Description and Overview**\n*   This is an API-based inbound integration between Shoppers Stop and Darwinbox.\n*   Shoppers Stop will consume Darwinbox APIs to update employee biometric data.\n*   The integration supports updating attendance punches for payroll and performance purposes.\n*   The scope is limited to 10,000 employees, with a maximum of 100,000 attendance punches pushed daily.\n*   Data flows inbound to Darwinbox.\n**API-Based Approach**\n*   Shoppers Stop will use Darwinbox's APIs to push attendance punches."
    },
    "Technical Design Specifications": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API - BASED INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Data Mapping Table": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API - BASED INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Assumptions": {
      "type": "text",
      "content": "**Assumptions**\n*   Shoppers Stop will provide accurate and complete employee data.\n*   Shoppers Stop will ensure the employee IDs provided in the attendance punches payload exist in Darwinbox.\n*   Shoppers Stop will adhere to Darwinbox API specifications and rate limits.\n*   Darwinbox API will be available and responsive during the scheduled integration execution.\n*   Shoppers Stop will maintain a stable network connection for API communication.\n*   Shoppers Stop is responsible for data validation before pushing to Darwinbox.\n*   Shoppers Stop will handle any data transformation required to match Darwinbox's expected format.\n*   Shift, Policy, and WeekOff assignments for employees are pre-configured in Darwinbox.\n*   Shoppers Stop will provide necessary authentication credentials for API access.\n*   The integration will be tested thoroughly in a non-production environment before deployment to production."
    },
    "Dependencies": {
      "type": "text",
      "content": "- Darwinbox API access must be provisioned for Shoppers Stop.\n    - API endpoint details will be provided separately.\n    - Authentication credentials (API key, client ID, client secret) must be securely exchanged.\n- Shoppers Stop must adhere to Darwinbox API rate limits.\n- The Darwinbox Attendance module must be configured.\n    - Employee data (employee ID, name) must exist in Darwinbox prior to attendance data being pushed.\n    - Attendance policies must be defined in Darwinbox.\n- Data validation rules must be implemented by Shoppers Stop before pushing data."
    },
    "APIs Used": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API - BASED INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Test Cases": {
      "type": "text",
      "content": "**Test Cases: Shoppers Stop - Darwinbox Attendance Integration**\n\n*   **Test Case Category:** API Integration Testing\n\n*   **Test Case ID:** TC-SS-DB-ATT-001\n\n*   **Test Case Name:** Successful Attendance Punch Submission\n\n    *   **Objective:** Verify successful submission of attendance punch data from Shoppers Stop to Darwinbox.\n    *   **Pre-conditions:**\n        *   Employee exists in Darwinbox.\n        *   API credentials are valid.\n        *   Network connectivity is established.\n    *   **Test Steps:**\n        1.  Shoppers Stop system sends a valid attendance punch payload to the Darwinbox API endpoint.\n        2.  Darwinbox API receives and processes the payload.\n    *   **Expected Result:**\n        *   API returns a success response (HTTP 200 OK).\n        *   Attendance record is created in Darwinbox with correct details.\n    *   **Data:**\n        *   Employee ID: Valid Darwinbox Employee ID\n        *   Punch Time: Current timestamp\n        *   Punch Type: IN/OUT\n    *   **Status:** To be Tested\n\n*   **Test Case ID:** TC-SS-DB-ATT-002\n\n*   **Test Case Name:** Invalid Employee ID\n\n    *   **Objective:** Verify error handling for invalid employee ID.\n    *   **Pre-conditions:**\n        *   API credentials are valid.\n        *   Network connectivity is established.\n    *   **Test Steps:**\n        1.  Shoppers Stop system sends an attendance punch payload with an invalid employee ID to the Darwinbox API endpoint.\n        2.  Darwinbox API receives and processes the payload.\n    *   **Expected Result:**\n        *   API returns an error response (HTTP 400 Bad Request or similar).\n        *   Error message indicates invalid employee ID.\n        *   No attendance record is created in Darwinbox.\n    *   **Data:**\n        *   Employee ID: Invalid Darwinbox Employee ID (e.g., \"INVALID_ID\")\n        *   Punch Time: Current timestamp\n        *   Punch Type: IN/OUT\n    *   **Status:** To be Tested\n\n*   **Test Case ID:** TC-SS-DB-ATT-003\n\n*   **Test Case Name:** Missing Required Fields\n\n    *   **Objective:** Verify error handling for missing required fields in the payload.\n    *   **Pre-conditions:**\n        *   API credentials are valid.\n        *   Network connectivity is established.\n    *   **Test Steps:**\n        1.  Shoppers Stop system sends an attendance punch payload with missing required fields (e.g., missing punch time) to the Darwinbox API endpoint.\n        2.  Darwinbox API receives and processes the payload.\n    *   **Expected Result:**\n        *   API returns an error response (HTTP 400 Bad Request or similar).\n        *   Error message indicates missing required fields.\n        *   No attendance record is created in Darwinbox.\n    *   **Data:**\n        *   Employee ID: Valid Darwinbox Employee ID\n        *   Punch Type: IN/OUT (Punch Time is intentionally missing)\n    *   **Status:** To be Tested\n\n*   **Test Case ID:** TC-SS-DB-ATT-004\n\n*   **Test Case Name:** Invalid Punch Type\n\n    *   **Objective:** Verify error handling for invalid punch type.\n    *   **Pre-conditions:**\n        *   API credentials are valid.\n        *   Network connectivity is established.\n    *   **Test Steps:**\n        1.  Shoppers Stop system sends an attendance punch payload with an invalid punch type (e.g., \"INVALID\") to the Darwinbox API endpoint.\n        2.  Darwinbox API receives and processes the payload.\n    *   **Expected Result:**\n        *   API returns an error response (HTTP 400 Bad Request or similar).\n        *   Error message indicates invalid punch type.\n        *   No attendance record is created in Darwinbox.\n    *   **Data:**\n        *   Employee ID: Valid Darwinbox Employee ID\n        *   Punch Time: Current timestamp\n        *   Punch Type: INVALID\n    *   **Status:** To be Tested\n\n*   **Test Case ID:** TC-SS-DB-ATT-005\n\n*   **Test Case Name:** API Authentication Failure\n\n    *   **Objective:** Verify error handling for invalid API credentials.\n    *   **Pre-conditions:**\n        *   Invalid API credentials.\n        *   Network connectivity is established.\n    *   **Test Steps:**\n        1.  Shoppers Stop system sends an attendance punch payload with invalid API credentials to the Darwinbox API endpoint.\n        2.  Darwinbox API receives and processes the payload.\n    *   **Expected Result:**\n        *   API returns an authentication error response (HTTP 401 Unauthorized or similar).\n        *   Error message indicates invalid credentials.\n        *   No attendance record is created in Darwinbox.\n    *   **Data:**\n        *   Invalid API Key/Secret\n        *   Employee ID: Valid Darwinbox Employee ID\n        *   Punch Time: Current timestamp\n        *   Punch Type: IN/OUT\n    *   **Status:** To be Tested\n\n*   **Test Case ID:** TC-SS-DB-ATT-006\n\n*   **Test Case Name:** High Volume Punch Submission\n\n    *   **Objective:** Verify API performance and stability under high load.\n    *   **Pre-conditions:**\n        *   API credentials are valid.\n        *   Network connectivity is established.\n    *   **Test Steps:**\n        1.  Shoppers Stop system sends a large number of attendance punch payloads (e.g., 10,000) concurrently to the Darwinbox API endpoint.\n        2.  Monitor API response times and error rates.\n    *   **Expected Result:**\n        *   API processes all requests within acceptable time limits.\n        *   Error rate remains within acceptable thresholds.\n        *   All attendance records are created correctly in Darwinbox.\n    *   **Data:**\n        *   Employee ID: Valid Darwinbox Employee IDs (multiple)\n        *   Punch Time: Current timestamp\n        *   Punch Type: IN/OUT\n    *   **Status:** To be Tested\n\n*   **Test Case ID:** TC-SS-DB-ATT-007\n\n*   **Test Case Name:** Data Type Validation\n\n    *   **Objective:** Verify data type validation for each field.\n    *   **Pre-conditions:**\n        *   API credentials are valid.\n        *   Network connectivity is established.\n    *   **Test Steps:**\n        1.  Shoppers Stop system sends an attendance punch payload with incorrect data types (e.g., string for punch time) to the Darwinbox API"
    },
    "Data Flow Diagram": {
      "type": "graphviz",
      "code": "digraph inbound_api_integration {\n    rankdir=LR;\n    node [shape=box, style=rounded, fontname=\"Arial\", fontsize=10];\n\n    subgraph cluster_shoppersstop {\n        label = \"Shoppers Stop\";\n        style = filled;\n        color = \"#E0E0E0\";\n\n        shoppersstop_system [label=\"Shoppers Stop System\", shape=cylinder];\n        attendance_data [label=\"Attendance Data\", shape=box];\n        api_request [label=\"API Request\", shape=box];\n    }\n\n    subgraph cluster_darwinbox {\n        label = \"Darwinbox\";\n        style = filled;\n        color = \"#F0FFF0\";\n\n        darwinbox_api [label=\"Darwinbox API\", shape=cylinder];\n        data_validation [label=\"Data Validation\", shape=box];\n        data_transformation [label=\"Data Transformation\", shape=box];\n        custom_logic [label=\"Custom Logic\\n(Employee Strength <= 10,000\\nMax 100,000 Punches/Day)\", shape=box];\n        darwinbox_system [label=\"Darwinbox System\", shape=cylinder];\n    }\n\n    shoppersstop_system -> api_request [label=\"Push Attendance Punches\"];\n    api_request -> darwinbox_api [label=\"API Call\"];\n    darwinbox_api -> data_validation [label=\"Receive Data\"];\n    data_validation -> data_transformation [label=\"Valid Data\"];\n    data_transformation -> custom_logic [label=\"Transform Data\"];\n    custom_logic -> darwinbox_system [label=\"Process Data\"];\n\n    // Styling\n    edge [fontname=\"Arial\", fontsize=8];\n}\n",
      "format": "dot"
    }
  },
  "metadata": {
    "generatedAt": "2025-05-26T04:18:32.891Z",
    "totalSections": 9
  }
}