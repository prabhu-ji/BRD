{
  "title": "TS-0526 Shoppers Stop :: Darwinbox - this is to update the biometric data for them for payroll and performance purpose Integration BRD",
  "detailsTable": {
    "Client": "Shoppers Stop",
    "Vendor": "Darwinbox",
    "Version": "1.0",
    "Doc Owner": "Raghu Vardhan",
    "Functional Lead": "Prabhu Pathak",
    "Status": "DRAFT [DRAFT / IN REVIEW / APPROVED / IN PRODUCTION]",
    "Last updated by": "Raghu Vardhan",
    "Last date updated": "2025-05-25",
    "Client Approved By [Name, Designation]": "Sandip Pingle, Architect",
    "Client Approved Date": "2025-05-25",
    "Mode of Integration": "API-Based [API-BASED / STANDARD / CUSTOM DEV]",
    "Modules": "Attendance",
    "Direction": "INBOUND [INBOUND / OUTBOUND / BI-DIRECTION]",
    "Frequency": "Monthly, Last Thursday, 6pm",
    "Data Load": "Incremental",
    "Client email for error/success response": "raghu.vardhan@darwinbox.io"
  },
  "sections": {
    "Purpose/Justification": {
      "type": "text",
      "content": "*   This document outlines the business requirements defined by Shoppers Stop and technical details associated with the Attendance integration using API approach defined by the Darwinbox Integrations team to have an updated integration in place between Darwinbox and Shoppers Stop.\n*   The purpose of this integration is to update employee biometric attendance data in Darwinbox for accurate payroll processing and performance management."
    },
    "Integration Description and Overview": {
      "type": "text",
      "content": "*   This is an API-Based INBOUND integration between Shoppers Stop and darwinbox.\n*   The integration will update biometric data in darwinbox for payroll and performance purposes.\n*   Shoppers Stop will consume Darwinbox APIs to push attendance punches.\n*   The integration scope is limited to 10,000 employees, with a maximum of 100,000 attendance punches pushed daily.\n*   Data flow is INBOUND to darwinbox, specifically to the Attendance module.\n*   This is a push-based integration initiated by Shoppers Stop.\n**API-Based Approach:**\n*   Shoppers Stop will use Darwinbox's exposed APIs to transmit attendance data."
    },
    "Technical Design Specifications": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API-Based INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Data Mapping Table": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API-Based INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Assumptions": {
      "type": "text",
      "content": "Assumptions:\n*   Shoppers Stop will provide accurate and complete biometric data for all employees.\n*   Employee IDs provided by Shoppers Stop will match existing Employee IDs in Darwinbox.\n*   Shoppers Stop will adhere to the Darwinbox API specifications for data format and structure.\n*   The Darwinbox API will be available and responsive during the scheduled integration times.\n*   Shoppers Stop will handle any necessary data transformations before sending data to Darwinbox.\n*   Shoppers Stop will ensure data is sent within the agreed-upon frequency and volume limits.\n*   Any custom fields required in Darwinbox for attendance processing are configured prior to integration.\n*   Shoppers Stop will provide a mechanism for error logging and reporting on their end.\n*   Darwinbox's standard attendance processing rules and policies will apply to the integrated data.\n*   Shoppers Stop will notify Darwinbox of any changes to their data structure or API usage."
    },
    "Dependencies": {
      "type": "text",
      "content": "**Dependencies**\n*   Shoppers Stop must provide a dedicated API endpoint for Darwinbox to send requests.\n*   Darwinbox requires API access credentials (API key, client ID, client secret) from Shoppers Stop.\n*   Shoppers Stop must provide detailed API documentation, including:\n    *   Request formats (JSON schema)\n    *   Authentication methods\n    *   Error codes and handling\n    *   Rate limiting policies"
    },
    "APIs Used": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API-Based INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Test Cases": {
      "type": "text",
      "content": "**Test Cases: Shoppers Stop - darwinbox Attendance Integration**\n\n*   **Test Case Category:** API-Based INBOUND Integration - Attendance Data\n\n*   **Objective:** Validate successful transfer of attendance punches from Shoppers Stop to darwinbox.\n\n*   **General Test Case Requirements:**\n\n    *   Verify data accuracy between source (Shoppers Stop) and target (darwinbox).\n    *   Confirm adherence to data mapping specifications.\n    *   Validate error handling and logging mechanisms.\n    *   Ensure compliance with security protocols.\n    *   Test performance under peak load conditions (100,000 punches/day).\n\n*   **Specific Test Cases:**\n\n    *   **Successful Punch Submission:**\n\n        *   Test ID: TC_SS_DB_ATT_001\n        *   Description: Submit a valid attendance punch for an existing employee.\n        *   Expected Result: Punch recorded accurately in darwinbox Attendance module.\n        *   Data Elements: Employee ID, Punch Time, Punch Type (IN/OUT), Location.\n        *   API Endpoint: (Specify darwinbox API endpoint here - e.g., /attendance/punch)\n        *   Request Payload: (Example JSON payload structure)\n            \n        *   Response Validation: Verify success code (e.g., 200 OK) and confirmation message.\n\n    *   **Invalid Employee ID:**\n\n        *   Test ID: TC_SS_DB_ATT_002\n        *   Description: Submit a punch with an invalid employee ID.\n        *   Expected Result: Error response indicating invalid employee ID.\n        *   Error Code: (Specify expected error code - e.g., 400 Bad Request)\n        *   Error Message: (Specify expected error message - e.g., \"Invalid Employee ID\")\n\n    *   **Missing Required Fields:**\n\n        *   Test ID: TC_SS_DB_ATT_003\n        *   Description: Submit a punch with missing required fields (e.g., punch time).\n        *   Expected Result: Error response indicating missing required fields.\n        *   Error Code: (Specify expected error code - e.g., 400 Bad Request)\n        *   Error Message: (Specify expected error message - e.g., \"Punch Time is required\")\n\n    *   **Invalid Punch Time Format:**\n\n        *   Test ID: TC_SS_DB_ATT_004\n        *   Description: Submit a punch with an invalid punch time format.\n        *   Expected Result: Error response indicating invalid date/time format.\n        *   Error Code: (Specify expected error code - e.g., 400 Bad Request)\n        *   Error Message: (Specify expected error message - e.g., \"Invalid Punch Time format. Use YYYY-MM-DDTHH:mm:ssZ\")\n\n    *   **Duplicate Punch Submission:**\n\n        *   Test ID: TC_SS_DB_ATT_005\n        *   Description: Submit the same punch data twice within a short time frame.\n        *   Expected Result: System handles duplicate submission appropriately (either rejects or updates existing record based on business rules).\n        *   Behavior: Document the expected behavior for duplicate punches.\n\n    *   **High Volume Testing:**\n\n        *   Test ID: TC_SS_DB_ATT_006\n        *   Description: Simulate a high volume of punch submissions (e.g., 100,000 punches) within a 24-hour period.\n        *   Expected Result: System performance remains acceptable, and all punches are processed without errors.\n        *   Performance Metrics: Response time, throughput, error rate.\n\n    *   **Security Testing:**\n\n        *   Test ID: TC_SS_DB_ATT_007\n        *   Description: Attempt to submit punches without proper authentication/authorization.\n        *   Expected Result: Access denied.\n        *   Authentication Method: (Specify authentication method - e.g., API Key, OAuth 2.0)\n\n    *   **Data Type Validation:**\n\n        *   Test ID: TC_SS_DB_ATT_008\n        *   Description: Submit punches with incorrect data types (e.g., string for numeric field).\n        *   Expected Result: Error response indicating invalid data type.\n\n    *   **Time Zone Handling:**\n\n        *   Test ID: TC_SS_DB_ATT_009\n        *   Description: Submit punches from different time zones.\n        *   Expected Result: Punches are correctly converted and stored in the darwinbox system's time zone.\n\n    *   **Edge Case: Midnight Punch:**\n\n        *   Test ID: TC_SS_DB_ATT_010\n        *   Description: Submit a punch at midnight (00:00:00).\n        *   Expected Result: Punch is processed correctly and associated with the correct date."
    },
    "Data Flow Diagram": {
      "type": "graphviz",
      "code": "digraph inbound_api_integration {\n    rankdir=LR;\n    node [shape=box, style=rounded, fontname=\"Arial\", fontsize=10];\n\n    subgraph cluster_shoppersstop {\n        label = \"Shoppers Stop\";\n        style = filled;\n        color = \"#E6E6FA\";\n\n        ss_system [label=\"Shoppers Stop System\", shape=box, style=\"rounded,filled\", fillcolor=\"#ADD8E6\"];\n        ss_auth [label=\"Authentication\\n(OAuth/API Key)\", shape=cylinder, style=filled, fillcolor=\"#F0E68C\"];\n    }\n\n    subgraph cluster_darwinbox {\n        label = \"darwinbox\";\n        style = filled;\n        color = \"#F0FFF0\";\n\n        darwinbox_api [label=\"darwinbox API\\n/attendance_punches (POST)\", shape=box, style=\"rounded,filled\", fillcolor=\"#90EE90\"];\n        darwinbox_db [label=\"darwinbox Database\", shape=cylinder, style=filled, fillcolor=\"#D3D3D3\"];\n    }\n\n    ss_system -> ss_auth [label=\"Authenticate\", style=dashed];\n    ss_auth -> darwinbox_api [label=\"POST /attendance_punches\\n(100,000 punches/day)\", style=bold];\n    darwinbox_api -> darwinbox_db [label=\"Store Attendance Data\", style=dashed];\n\n    ss_auth -> ss_system [label=\"Authentication\\nToken\", style=dashed, dir=back];\n    darwinbox_api -> ss_system [label=\"Response (200 OK)\", style=dashed, dir=back];\n\n    note [shape=note, label=\"API-Based INBOUND Integration\\nEmployee Strength: 10,000\", pos=\"0,-2\", fontsize=10];\n}\n",
      "format": "dot"
    }
  },
  "metadata": {
    "generatedAt": "2025-05-26T04:49:56.904Z",
    "totalSections": 9
  }
}