{
  "title": "TS-0525 Shoppers Stop :: Darwinbox - this is to update the biometric data for them for payroll and performance purpose Integration BRD",
  "detailsTable": {
    "Client": "Shoppers Stop",
    "Vendor": "Darwinbox",
    "Version": "2.0",
    "Doc Owner": "@Integration Team",
    "Functional Lead": "@Technical Lead",
    "Status": "IN REVIEW [DRAFT / IN REVIEW / APPROVED / IN PRODUCTION]",
    "Last updated by": "@Integration Team",
    "Last date updated": "05-25-2025",
    "Client Approved By [Name, Designation]": "",
    "Client Approved Date": "",
    "Mode of Integration": "API - BASED [API-BASED / STANDARD / CUSTOM DEV]",
    "Modules": "Attendance",
    "Direction": "INBOUND [INBOUND / OUTBOUND / BI-DIRECTION]",
    "Frequency": "Monthly, Last Thursday, 6pm",
    "Data Load": "Incremental",
    "Client email for communication": "integration@client.com"
  },
  "sections": {
    "Purpose/Justification": {
      "type": "text",
      "content": "*   This document outlines the business requirements defined by Shoppers Stop and technical details associated with the Attendance integration using API approach defined by the Darwinbox Integrations team to have an updated integration in place between Darwinbox and Shoppers Stop.\n*   The purpose of this integration is to update employee biometric attendance data in Darwinbox for accurate payroll processing and performance management."
    },
    "Integration Description and Overview": {
      "type": "text",
      "content": "*   This is an API-based inbound integration. Shoppers Stop will consume Darwinbox APIs to push employee biometric data.\n*   The integration aims to update biometric data in Darwinbox for payroll and performance purposes.\n*   The scope is limited to an employee strength of 10,000, with a maximum of 100,000 attendance punches pushed daily.\n*   Data flow is inbound, with data originating from Shoppers Stop and flowing into Darwinbox.\n*   This is a push-based integration.\n*   Module: Attendance\n**API-Based Approach:**\n*   Shoppers Stop will use Darwinbox's APIs to transmit attendance punches."
    },
    "Technical Design Specifications": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API - BASED INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Data Mapping Table": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API - BASED INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Assumptions": {
      "type": "text",
      "content": "**Assumptions**\n*   Shoppers Stop will provide accurate and complete employee biometric data.\n*   All employee IDs provided by Shoppers Stop will exist within Darwinbox.\n*   Shoppers Stop will adhere to Darwinbox's API specifications and data format requirements.\n*   The Shoppers Stop system will be responsible for handling any data transformations required to match Darwinbox's data model.\n*   Shoppers Stop will ensure the integration is tested thoroughly in a non-production environment before deploying to production.\n*   Darwinbox API uptime will be maintained at agreed upon service levels.\n*   Shoppers Stop will manage and monitor the integration on their end, including error handling and retry mechanisms.\n*   Shoppers Stop will notify Darwinbox of any changes to their system that may impact the integration.\n*   The maximum daily volume of 100,000 attendance punches is an estimated upper limit and Shoppers Stop will work with Darwinbox if this limit needs to be adjusted.\n*   Shoppers Stop will provide a dedicated point of contact for integration-related issues."
    },
    "Dependencies": {
      "type": "text",
      "content": "- Darwinbox API access must be provisioned for Shoppers Stop.\n    - API endpoint details and documentation will be provided.\n    - Shoppers Stop's IP address(es) must be whitelisted.\n- Authentication credentials must be established and securely shared.\n    - API Key or OAuth 2.0 credentials will be used.\n    - Secure key exchange mechanism to be defined.\n- The HCM module (specifically Attendance) must be fully configured.\n    - Attendance policies must be defined in Darwinbox."
    },
    "APIs Used": {
      "type": "table",
      "headers": [
        "Field Name",
        "Data Type",
        "Required",
        "Description"
      ],
      "data": [
        [
          "Employee ID",
          "string",
          "Yes",
          "Unique employee identifier"
        ],
        [
          "First Name",
          "string",
          "Yes",
          "Employee first name"
        ],
        [
          "Last Name",
          "string",
          "Yes",
          "Employee last name"
        ],
        [
          "Email",
          "email",
          "Yes",
          "Work email address"
        ],
        [
          "Department",
          "string",
          "No",
          "Department name"
        ],
        [
          "Position",
          "string",
          "No",
          "Job title or position"
        ],
        [
          "Start Date",
          "date",
          "Yes",
          "Employment start date"
        ],
        [
          "Manager ID",
          "string",
          "No",
          "Reporting manager identifier"
        ]
      ],
      "validationRules": [
        "All required fields must have non-null values",
        "Email fields must follow standard email format",
        "Date fields must be in YYYY-MM-DD format",
        "Numeric fields must contain valid numbers only",
        "Data must comply with darwinbox system requirements"
      ],
      "transformationNotes": [
        "Data transformation for API - BASED INBOUND integration",
        "Source: Shoppers Stop System",
        "Target: darwinbox System",
        "Field mapping and validation applied",
        "Error handling for invalid data implemented"
      ]
    },
    "Test Cases": {
      "type": "text",
      "content": "**Test Cases: Shoppers Stop - darwinbox Attendance Integration**\n\n*   **Test Case Category:** API - BASED INBOUND Integration Testing\n\n*   **Objective:** Validate the successful integration of Shoppers Stop's attendance data into darwinbox via API.\n\n*   **General Test Case Requirements:**\n\n    *   All test cases must be executed in a dedicated test environment.\n    *   Test data should reflect realistic Shoppers Stop employee attendance scenarios.\n    *   Each test case must include clear steps, expected results, and actual results.\n    *   Error handling and logging must be validated for each test case.\n\n*   **Specific Test Cases:**\n\n    *   **TC_ATT_001: Successful Attendance Punch Submission**\n\n        *   **Steps:**\n            1.  Submit a valid attendance punch record via the API.\n            2.  Verify the API response code is 200 (OK) or 201 (Created).\n        *   **Expected Result:**\n            *   The attendance punch is successfully recorded in darwinbox.\n            *   Employee attendance record is updated in the darwinbox Attendance module.\n\n    *   **TC_ATT_002: Invalid Employee ID**\n\n        *   **Steps:**\n            1.  Submit an attendance punch with an invalid employee ID.\n        *   **Expected Result:**\n            *   The API returns an error code (e.g., 400 Bad Request).\n            *   Error message indicates \"Invalid Employee ID.\"\n            *   No attendance record is created in darwinbox.\n\n    *   **TC_ATT_003: Missing Required Fields**\n\n        *   **Steps:**\n            1.  Submit an attendance punch with missing required fields (e.g., timestamp).\n        *   **Expected Result:**\n            *   The API returns an error code (e.g., 400 Bad Request).\n            *   Error message indicates \"Missing Required Fields.\"\n            *   No attendance record is created in darwinbox.\n\n    *   **TC_ATT_004: Duplicate Attendance Punch**\n\n        *   **Steps:**\n            1.  Submit the same attendance punch record twice.\n        *   **Expected Result:**\n            *   The API handles the duplicate record appropriately (either ignores or updates).\n            *   No duplicate attendance records are created in darwinbox.\n\n    *   **TC_ATT_005: Future Dated Attendance Punch**\n\n        *   **Steps:**\n            1.  Submit an attendance punch with a timestamp in the future.\n        *   **Expected Result:**\n            *   The API returns an error code or warning.\n            *   The attendance record is either rejected or flagged for review.\n\n    *   **TC_ATT_006: Past Dated Attendance Punch (Beyond Allowed Limit)**\n\n        *   **Steps:**\n            1.  Submit an attendance punch with a timestamp significantly in the past (e.g., beyond the allowed correction period).\n        *   **Expected Result:**\n            *   The API returns an error code or warning.\n            *   The attendance record is rejected.\n\n    *   **TC_ATT_007: High Volume Load Test**\n\n        *   **Steps:**\n            1.  Simulate a high volume of attendance punch submissions (e.g., 100,000 punches within a short period).\n        *   **Expected Result:**\n            *   The API handles the load without performance degradation.\n            *   All attendance records are processed successfully.\n            *   System performance metrics (response time, CPU usage) remain within acceptable limits.\n\n    *   **TC_ATT_008: API Authentication Failure**\n\n        *   **Steps:**\n            1.  Submit an attendance punch with invalid API credentials.\n        *   **Expected Result:**\n            *   The API returns an authentication error (e.g., 401 Unauthorized).\n            *   No attendance record is created in darwinbox.\n\n    *   **TC_ATT_009: Data Type Validation**\n\n        *   **Steps:**\n            1.  Submit attendance data with incorrect data types (e.g., string in a numeric field).\n        *   **Expected Result:**\n            *   The API returns a validation error.\n            *   Error message indicates the data type mismatch.\n\n    *   **TC_ATT_010: Time Zone Handling**\n\n        *   **Steps:**\n            1.  Submit attendance punches from different time zones.\n        *   **Expected Result:**\n            *   The API correctly converts and stores the timestamps in the darwinbox system time zone.\n            *   Attendance reports display accurate times."
    },
    "Data Flow Diagram": {
      "type": "graphviz",
      "code": "digraph inbound_api_integration {\n    rankdir=LR;\n    node [shape=box, style=rounded, fontname=\"Arial\", fontsize=10];\n\n    subgraph cluster_shoppersstop {\n        label = \"Shoppers Stop\";\n        style = filled;\n        color = \"#E6E6FA\";\n\n        shoppersstop_system [label=\"Shoppers Stop System\", shape=cylinder];\n        api_gateway [label=\"API Gateway\", shape=box];\n        data_validation [label=\"Data Validation\", shape=box];\n        custom_logic [label=\"Custom Logic\\n(Attendance Processing)\", shape=box];\n    }\n\n    subgraph cluster_darwinbox {\n        label = \"Darwinbox\";\n        style = filled;\n        color = \"#F0FFF0\";\n\n        darwinbox_system [label=\"Darwinbox System\", shape=cylinder];\n        darwinbox_api [label=\"Darwinbox API\\n(Attendance Push)\", shape=box];\n    }\n\n    // Edges\n    darwinbox_system -> darwinbox_api [label=\"Push Attendance Data\", style=dashed];\n    darwinbox_api -> api_gateway [label=\"API Call (HTTPS)\", arrowhead=normal];\n    api_gateway -> data_validation [label=\"Data Received\"];\n    data_validation -> custom_logic [label=\"Valid Data\"];\n    custom_logic -> shoppersstop_system [label=\"Attendance Records\"];\n\n    // Styling\n    edge [fontname=\"Arial\", fontsize=8];\n}\n",
      "format": "dot"
    }
  },
  "metadata": {
    "generatedAt": "2025-05-25T16:24:47.882Z",
    "totalSections": 9
  }
}