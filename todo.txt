# COMPREHENSIVE TODO LIST - BRD CONFLUENCE FIXES

## PRIORITY 1: Remove Source Code Display for GraphViz Diagrams
### Files to modify: server/confluence.js

**Current Issue:** GraphViz diagrams show collapsible source code below the image
**Target:** Show only the image and description, no source code section

### Changes needed in server/confluence.js:

1. **Line 673-692** - generateDiagramContent() method:
   - Remove the entire `<ac:structured-macro ac:name="code">` block from GraphViz placeholder content
   - Remove the `<p><strong>üìä GraphViz Diagram: ${key}</strong></p>` and `<p><em>üé® This diagram will be rendered...</em></p>` lines
   - Keep only the placeholder comment for replacement

2. **Line 1836-1860** - replaceGraphvizPlaceholders() method:
   - Simplify the imageContent to only include the image and caption
   - Remove any reference to source code display
   - Keep the centered image with description below

**Impact Analysis:**
- ‚úÖ No impact on image generation or upload functionality
- ‚úÖ No impact on diagram processing logic
- ‚úÖ Only affects the final display format in Confluence

---

## PRIORITY 2: Increase Image Dimensions
### Files to modify: server/confluence.js

**Current Issue:** Images are set to 900px width, user wants larger dimensions
**Target:** Increase to larger, more readable size

### Changes needed in server/confluence.js:

1. **Line 870** - generateTechnicalFilesForSection() method:
   - Change `ac:width="900"` to `ac:width="1200"` or larger

2. **Line 1846** - replaceGraphvizPlaceholders() method:
   - Change `ac:width="900"` to `ac:width="1200"` or larger

3. **Line 1654** - renderGraphvizToImage() method:
   - Change `.resize(500, 350, ...)` to `.resize(800, 600, ...)` or larger
   - This affects the actual image generation, not just display size

**Impact Analysis:**
- ‚ö†Ô∏è Larger images may affect page loading times
- ‚ö†Ô∏è May need to adjust based on typical Confluence page width
- ‚úÖ Better readability for complex diagrams
- ‚úÖ No functional impact on generation logic

---

## PRIORITY 3: Remove "Technical Attachments" Titles
### Files to modify: server/confluence.js

**Current Issue:** Shows "Technical Attachments" heading above uploaded content
**Target:** Display only the content (images/tables) without the heading

### Changes needed in server/confluence.js:

1. **Line 763** - generateTechnicalFilesForSection() method:
   - Remove or comment out: `let content = `\n<h4>Technical Attachments</h4>\n`;`
   - Change to: `let content = "";`

**Impact Analysis:**
- ‚úÖ Cleaner display without unnecessary headers
- ‚úÖ No impact on file processing or table generation
- ‚úÖ Images and tables will still display properly

---

## PRIORITY 4: Remove Data Mapping Table CSV Auto-Display Logic
### Files to modify: server/ai-generator.js

**Current Issue:** "Data Mapping Table" sections automatically display CSV data as tables
**Target:** Remove this automatic behavior, treat as normal content generation

### Changes needed in server/ai-generator.js:

1. **Line 1825-1842** - generateTable() method:
   - Remove the specific condition for "data" and "mapping" detection:
   ```javascript
   } else if (
       outputKey.includes("data") &&
       outputKey.includes("mapping")
   ) {
       return this.generateDataMappingContent(context, brdData);
   ```

2. **Line 1918-1976** - generateDataMappingContent() method:
   - Either remove this entire method OR
   - Modify it to return empty content always:
   ```javascript
   generateDataMappingContent(context, brdData) {
       return {
           type: "text",
           content: "",
       };
   }
   ```

**Impact Analysis:**
- ‚ö†Ô∏è "Data Mapping Table" sections will now be generated by AI instead of auto-populated from CSV
- ‚ö†Ô∏è Users will need to manually reference CSV data if needed
- ‚úÖ Consistent behavior across all sections
- ‚úÖ More flexible content generation

---

## ADDITIONAL CONSIDERATIONS

### Testing Requirements:
1. Test GraphViz diagram generation without source code display
2. Verify larger images display properly in Confluence
3. Confirm technical attachments appear without titles
4. Test Data Mapping Table sections generate AI content instead of CSV tables

### Rollback Plan:
1. Keep backup of original methods
2. Test changes on development environment first
3. Have quick revert option for each change

### Dependencies Check:
- ‚úÖ No external library changes needed
- ‚úÖ No database schema changes required
- ‚úÖ No API endpoint modifications needed
- ‚úÖ Only internal display logic modifications

### Configuration Updates:
- Consider adding configuration options for image sizes
- May want to make source code display optional rather than removing entirely
- Could add toggle for technical attachment titles

---

## IMPLEMENTATION ORDER:
1. **First:** Remove "Technical Attachments" titles (lowest risk)
2. **Second:** Increase image dimensions (medium risk, visible impact)
3. **Third:** Remove source code display (medium risk, user experience change)
4. **Fourth:** Remove Data Mapping Table auto-logic (highest risk, behavioral change)

## ESTIMATED IMPACT:
- **Low Risk:** Titles removal, image size increase
- **Medium Risk:** Source code display removal
- **High Risk:** Data Mapping Table logic change (changes user expectations) 